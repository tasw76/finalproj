---
title: "EDA"
author: "WT"
format: html
editor: visual
---

## Load the data

-   Download, bring in the data, preview, and check for missing values

```{r}
library(tidyverse)

# Load the data
data1 <- read_csv("diabetes_binary_health_indicators_BRFSS2015.csv")
head(data1)
# check for missing values
colSums(is.na(data1))   # No missing noted
data1
```

## Preprocess variables

-   In this part, I convert several variables to factor variables with meaningful level names

```{r}
# convert binary numeric variables to factors
data1 <- data1 %>%
  mutate(
    HighBP = factor(HighBP, levels = c(0, 1), labels = c("No", "Yes")),
    HighChol = factor(HighChol, levels = c(0, 1), labels = c("No", "Yes")),
    Smoker = factor(Smoker, levels = c(0, 1), labels = c("No", "Yes")),
    Stroke = factor(Stroke, levels = c(0, 1), labels = c("No", "Yes")),
    HeartDiseaseorAttack = factor(HeartDiseaseorAttack, levels = c(0, 1), labels = c("No", "Yes")),
    PhysActivity = factor(PhysActivity, levels = c(0, 1), labels = c("No", "Yes")),
    Fruits = factor(Fruits, levels = c(0, 1), labels = c("No", "Yes")),
    HvyAlcoholConsump = factor(HvyAlcoholConsump, levels = c(0, 1), labels = c("No", "Yes")),
    GenHlth = factor(GenHlth, levels = c(1,2,3,4,5), labels = c("excellent", "very_good", "good", "fair", "poor"))
  )

data1
glimpse(data1)
```

## Summarizations

-   Summary of the response variable (Diabetes_binary)
-   It shows there are about 14% of the total population in the data have diabetes

```{r}
summary(data1)
# summary of response variable
response_summary <- data1 %>%
  count(Diabetes_binary) %>%
  mutate(Percentage = round(n / sum(n) * 100, 2))
print(response_summary)

```

-   Summary of a predictor 'GenHlth'
-   The results show the counts and percentages details in each of the five levels of GenHlth: more than 80% of the population is in good, very good, or excellent health condition

```{r}

genhlth_summary <- data1 %>%
  count(GenHlth) %>%
  mutate(Percentage = round(n / sum(n) * 100, 2))

print(genhlth_summary)

```

-   Summary of a numeric predictor BMI
-   Results show mean, median, standard deviation, min and max of BMI

```{r}
bmi_summary <- data1 %>%
  summarise(
    Mean = round(mean(BMI, na.rm = TRUE), 2),
    Median = round(median(BMI, na.rm = TRUE), 2),
    SD = round(sd(BMI, na.rm = TRUE), 2),
    Min = round(min(BMI, na.rm = TRUE), 2),
    Max = round(max(BMI, na.rm = TRUE), 2)
  )
print(bmi_summary)

```

-   produce a correlation between Diabetes_binary and BMI
-   the resulting correlation shows that they are not significantly correlated - there is a weak negative correlation (-0.2168) between the predictor and the response. (correlation between Diabetes_binary and other predictors are produced but not illustrated here)

```{r}
library(ltm)
data1$Diabetes_binary <- as.numeric(as.character(data1$Diabetes_binary))
correlation <- biserial.cor(data1$BMI, data1$Diabetes_binary)
print(correlation)

```

-   Produce a stacked bar plot to visualize the relationship between Diabetes_binary and HighBP
-   Based on the plot, it seems that the likelihood of having diabetes is significantly higher if the individual has high blood pressure (other predictors are also plotted but not illustrated here)

```{r}
library(ggplot2)

# Convert the response to factors 
data1 <- data1 %>%
  mutate(Diabetes_binary = factor(Diabetes_binary, labels = c("No", "Yes")))

# Create a stacked bar plot for HighBP vs Diabetes_binary
ggplot(data1, aes(x = HighBP, fill = Diabetes_binary)) +
  geom_bar(position = "fill") +
  labs(
    x = "High Blood Pressure",
    y = "Proportion",
    fill = "Diabetes Status",
    title = "Relationship Between High Blood Pressure and Diabetes"
  ) +
  scale_y_continuous(labels = scales::percent) +
  theme_minimal() 

```

```{r}
data1
```
